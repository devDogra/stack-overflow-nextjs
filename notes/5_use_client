use client
creates a network boundary 
everything beyond it (child and grandhild etc)
are treated as part of the client bundle



so if u've got a server comp that uses server only code (like env vars or direct db calls), if u import it into a use client client comp and the use it,
it's not supported cuz its got server only code which obvsiouyly cant be run
on the client 


what is supprted then?

pass server comps as props to client comps

// This pattern works:
// You can pass a Server Component as a child or prop of a
// Client Component.
import ClientComponent from './client-component'
import ServerComponent from './server-component'
 

 (where clientcomp accepts c hildren props)
// Pages in Next.js are Server Components by default
export default function Page() {
  return (
    <ClientComponent>
      <ServerComponent />
    </ClientComponent>
  )
}

https://nextjs.org/docs/app/building-your-application/rendering/composition-patterns

With this approach, <ClientComponent> and <ServerComponent> are decoupled and can be rendered independently. In this case, the child <ServerComponent> can be rendered on the server, well before <ClientComponent> is rendered on the client.


in the use client case, theyre not decoupled cuz everything beyond 
use client is treated as client shit in the client bundle of the client comp

so even if server comp rendered on its own, when its imported into client comp 
its ALSO bundled with the client code WITHOUT being run on the server, 
so the user gets the client comp + server comp bundle which it executes and which will fail cuz server comp needs server only shit which isnnt abailable 
on the fucking browser 


Yes, you can use client components inside server components in Next.js. However, you need to be careful while doing so. If you import a component that uses useEffect inside a server component, you will get an error message saying that the component can only work inside a client component. To avoid this error, you can either mark the parent component as a client component using useClient or import the component directly inside a client component 1




